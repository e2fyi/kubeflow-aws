apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: workflow-controller
spec:
  template:
    spec:
      containers:
        - name: workflow-controller
          image: $(workflowControllerImage)
          args:
            - --configmap
            - workflow-controller-configmap
            - --executor-image
            - $(executorImage)
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-controller-configmap
data:
  config: |
    {
    namespace: $(namespace),
    executorImage: $(executorImage),
    artifactRepository:
    {
        archiveLogs: true,
        s3: {
            bucket: $(artifactRepositoryBucket),
            keyPrefix: $(artifactRepositoryKeyPrefix),
            endpoint: s3.amazonaws.com,
            insecure: false
        }
    }
    }
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: ml-pipeline-ui
spec:
  template:
    spec:
      containers:
        - name: ml-pipeline-ui
          env:
            - name: ARGO_ARCHIVE_LOGS
              value: "true"
            - name: ARGO_ARCHIVE_ARTIFACTORY
              value: s3
            - name: ARGO_ARCHIVE_BUCKETNAME
              value: $(artifactRepositoryBucket)
            - name: ARGO_ARCHIVE_PREFIX
              value: $(artifactRepositoryKeyPrefix)
            - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
              value: /etc/config/viewer-tensorboard-template.json
            - name: METADATA_ENVOY_SERVICE_SERVICE_HOST
              value: metadata-envoy-service
            - name: ML_PIPELINE_SERVICE_HOST
              value: ml-pipeline
            - name: DISABLE_GKE_METADATA
              value: "true"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
      volumes:
        - name: config-volume
          configMap:
            name: ml-pipeline-ui-viewer-template
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: ml-pipeline
spec:
  template:
    spec:
      containers:
        - name: ml-pipeline-api-server
          env:
            - name: DBCONFIG_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: username
            - name: DBCONFIG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: password
          volumeMounts:
            - name: config-volume
              mountPath: /config
      volumes:
      - name: config-volume
        configMap:
          name: ml-pipeline-config
          items:
            - key: config.json
              path: config.json
            - key: sample_config.json
              path: sample_config.json
---
# metadata-config is retained for backward compatibility reasons.
apiVersion: v1
kind: ConfigMap
metadata:
  name: metadata-configmap
  labels:
    component: metadata-server
data:
  mysql_database: "$(metadataMysqlDb)"
  mysql_host: "$(mysqlHost)"
  mysql_port: "3306"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metadata-mysql-configmap
  labels:
    component: metadata-server
data:
  MYSQL_DATABASE: "$(metadataMysqlDb)"
  MYSQL_HOST: "$(mysqlHost)"
  MYSQL_PORT: "3306"
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: metadata-deployment
spec:
  template:
    spec:
      containers:
      - name: container
        env:
        - name: DBCONFIG_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: username
        - name: DBCONFIG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: password
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: metadata-mysql-configmap
              key: MYSQL_DATABASE
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: metadata-mysql-configmap
              key: MYSQL_HOST
        - name: MYSQL_PORT
          valueFrom:
            configMapKeyRef:
              name: metadata-mysql-configmap
              key: MYSQL_PORT
